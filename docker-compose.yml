version: '3.4'

networks:
  default:
    name: "${NETWORK_ID}"
    external: false

services:
  angular:
    build:
      context: .
      dockerfile: Dockerfile.angular
    restart: unless-stopped
    container_name: "${PROJECT_NAME}_angular"
    command: ng serve --host 0.0.0.0 --disable-host-check
    volumes:
      - ./aafs-ui:/app
    expose:
      - '4200'
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_angular.rule=Host(`${PROJECT_BASE_URL}`)"

  php:
    image: wodby/php:$PHP_TAG
    restart: unless-stopped
    container_name: "${PROJECT_NAME}_php"
    environment:
      # PHP 8.2+ supports "PHP_MAIL_MIXED_LF_AND_CRLF=On" and does not need dos2unix workaround.
      PHP_MAIL_MIXED_LF_AND_CRLF: On
      PHP_SENDMAIL_PATH: '/usr/bin/msmtp -t'
#     # PHP 8.1 and previous version require dos2unix workaround.
#      PHP_SENDMAIL_PATH: '"/usr/bin/dos2unix -u | /usr/bin/msmtp -t"'
      # Mailhog:
      MSMTP_HOST: mailhog
      MSMTP_PORT: 1025
#      # OpenSMTPD:
#      MSMTP_HOST: opensmtpd
#      MSMTP_PORT: 25
      DB_HOST: $DB_HOST
      DB_PORT: $DB_PORT
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      DB_DRIVER: $DB_DRIVER
      PHP_FPM_USER: wodby
      PHP_FPM_GROUP: wodby
      PHP_SHORT_OPEN_TAG: 0
      COLUMNS: 80 # Set 80 columns for docker exec -it.
## Read instructions at https://wodby.com/docs/stacks/php/local/#xdebug
#      PHP_XDEBUG: 1
#      PHP_XDEBUG_DEFAULT_ENABLE: 1
#      PHP_XDEBUG_REMOTE_CONNECT_BACK: 0
#      PHP_IDE_CONFIG: serverName=my-ide
#      PHP_XDEBUG_IDEKEY: "my-ide"
#      PHP_XDEBUG_REMOTE_HOST: host.docker.internal # Docker 18.03+ Mac/Win
#      PHP_XDEBUG_REMOTE_HOST: 172.17.0.1 # Linux
#      PHP_XDEBUG_REMOTE_HOST: 10.254.254.254 # macOS, Docker < 18.03
#      PHP_XDEBUG_REMOTE_HOST: 10.0.75.1 # Windows, Docker < 18.03
#      PHP_XDEBUG_REMOTE_LOG: /tmp/php-xdebug.log
## PHPUnit Drupal testing configurations
#      SIMPLETEST_BASE_URL: "http://nginx"
#      SIMPLETEST_DB: "${DB_DRIVER}://${DB_USER}:${DB_PASSWORD}@${DB_HOST}/${DB_NAME}#tests_"
#      MINK_DRIVER_ARGS_WEBDRIVER: '["chrome", {"browserName":"chrome","goog:chromeOptions":{"args":["--disable-gpu","--headless"]}}, "http://chrome:9515"]'

    volumes:
      - ./aafs-api-php:/var/www/html:cached
## For macOS users (https://wodby.com/docs/stacks/drupal/local#docker-for-mac)
#      - ./:/var/www/html:cached # User-guided caching
#      - docker-sync:/var/www/html # Docker-sync
## For XHProf and Xdebug profiler traces
#      - files:/mnt/files

  nginx:
    image: wodby/nginx:$NGINX_TAG
    restart: unless-stopped
    container_name: "${PROJECT_NAME}_nginx"
    depends_on:
      - php
    environment:
      NGINX_STATIC_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_VHOST_PRESET: php
      NGINX_SERVER_ROOT: /var/www/html/public
      NGINX_MODSECURITY_ENABLED: 1
      NGINX_PAGESPEED_ENABLED: 1
#      NGINX_CONF_INCLUDE: /var/www/html/prod-docker/vhost.conf
#      NGINX_DRUPAL_FILE_PROXY_URL: http://example.com
#    ports:
#      - '443:443'
    volumes:
      - ./aafs-api-php:/var/www/html:cached
# For macOS users (https://wodby.com/docs/stacks/drupal/local#docker-for-mac)
#      - ./:/var/www/html:cached # User-guided caching
#      - docker-sync:/var/www/html # Docker-sync
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_nginx.rule=Host(`api.${PROJECT_BASE_URL}`)"

  postgres:
    image: postgis/postgis 
    restart: unless-stopped
    container_name: "${PROJECT_NAME}_postgres"
    stop_grace_period: 30s
    shm_size: 1g
    environment:
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256
    ports:
      - '5432:5432'
    volumes:
      - ./postgres-init:/docker-entrypoint-initdb.d # Place init file(s) here.
      - ./postgres-data:/var/lib/postgresql/data # Use bind mount
  
  adminer:
    container_name: "${PROJECT_NAME}_adminer"
    image: wodby/adminer:$ADMINER_TAG
    restart: unless-stopped
    init: true
    environment:
      # For PostgreSQL:
      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_DB_HOST: $DB_HOST
      ADMINER_DEFAULT_DB_NAME: $DB_NAME
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_adminer.rule=Host(`adminer.${PROJECT_BASE_URL}`)"

  traefik:
    image: traefik:v2.0
    restart: unless-stopped
    container_name: "${PROJECT_NAME}_traefik"
    command: --api.insecure=true --providers.docker
    ports:
      - '80:80'
      - '8080:8080' # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock